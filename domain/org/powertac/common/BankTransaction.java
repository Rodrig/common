/*
 * Copyright 2011 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an
 * "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
package org.powertac.common;

import java.util.List;

import org.apache.log4j.Logger;
import org.joda.time.Instant;
import org.powertac.common.interfaces.TransactionProcessor;

import com.thoughtworks.xstream.annotations.*;

/**
 * Represents interest charges and payments for brokers. Generated by
 * AccountingService once/day.
 * @author John Collins
 */
@XStreamAlias("bank-tx")
public class BankTransaction extends BrokerTransaction
{
  static private Logger stateLog = Logger.getLogger("State");
  
  /** The amount of this transaction */
  @XStreamAsAttribute
  private double amount = 0.0;

  /**
   * Constructs a new BankTransaction instance, giving it a new id.
   */
  public BankTransaction (Broker broker, double amount, Instant time)
  {
    super(time, broker);
    this.amount = amount;
    stateLog.info("BankTransaction:" + this.id + ":new:" + time.getMillis() + ":" + broker.getUsername() +
                  ":" + amount);
  }

  public double getAmount ()
  {
    return amount;
  }

  public void process (TransactionProcessor svc, List msgs)
  {
    svc.processTransaction(this, msgs);
  }
}
